{"version":3,"sources":["webpack:///./src/templates/InfoPageTemplate.js"],"names":["ContentWrapper","styled","article","InfoPageTemplate","render","this","props","data","page","frontmatter","htmlAst","partials","getNamedPartials","renderAst","rehypeReact","createElement","React","components","Compiler","title","Component"],"mappings":"kSAcMA,EAAiBC,IAAOC,QAAV,uFAAGD,CAAH,MAECE,E,0FACnBC,OAAA,WACE,IACA,EADiBC,KAAKC,MAAdC,KAC8BC,KAA9BC,EAAR,EAAQA,YAAaC,EAArB,EAAqBA,QACfC,EAAWC,cACXC,EAAY,IAAIC,IAAY,CAChCC,cAAeC,IAAMD,cACrBE,WAAYN,IACXO,SAEH,OACE,kBAAC,WAAD,KACE,kBAAC,SAAD,CAAQC,MAAOV,EAAYU,QAC3B,kBAAC,IAAD,KACE,kBAAC,IAAD,KACE,kBAAC,WAAD,KACE,kBAAC,IAAD,KACE,kBAACnB,EAAD,KACE,4BAAKS,EAAYU,OAChBN,EAAUH,U,GAnBiBM,IAAMI","file":"component---src-templates-info-page-template-js-d7ba886b1c50f480eca0.js","sourcesContent":["import React, { Fragment } from \"react\"\nimport { graphql } from \"gatsby\"\nimport styled from \"styled-components\"\nimport rehypeReact from \"rehype-react\"\nimport { Helmet } from \"react-helmet\"\n\nimport Layout from \"./Layout\"\n\nimport getNamedPartials from \"../partials\"\n\nimport \"./remark.css\"\nimport { LoginStateContextProvider } from \"../contexes/LoginStateContext\"\nimport Container from \"../components/Container\"\n\nconst ContentWrapper = styled.article``\n\nexport default class InfoPageTemplate extends React.Component {\n  render() {\n    const { data } = this.props\n    const { frontmatter, htmlAst } = data.page\n    const partials = getNamedPartials()\n    const renderAst = new rehypeReact({\n      createElement: React.createElement,\n      components: partials,\n    }).Compiler\n\n    return (\n      <Fragment>\n        <Helmet title={frontmatter.title} />\n        <LoginStateContextProvider>\n          <Layout>\n            <Fragment>\n              <Container>\n                <ContentWrapper>\n                  <h1>{frontmatter.title}</h1>\n                  {renderAst(htmlAst)}\n                </ContentWrapper>\n              </Container>\n            </Fragment>\n          </Layout>\n        </LoginStateContextProvider>\n      </Fragment>\n    )\n  }\n}\n\nexport const pageQuery = graphql`\n  query($path: String!) {\n    page: markdownRemark(frontmatter: { path: { eq: $path } }) {\n      htmlAst\n      html\n      frontmatter {\n        path\n        title\n      }\n    }\n  }\n`\n"],"sourceRoot":""}